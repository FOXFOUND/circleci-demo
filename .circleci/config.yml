version: 2
jobs:
  build:
    docker:
      - image: docker:18.06.1-ce-git
    environment:
      TEST_VAR: test_var_value
      IMAGE_NAME: kcq/golang-app

    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Check env variables
          command: printenv
      - run:
          name: Check DockerSlim
          command: |
            docker run -e DOCKER_HOST=$DOCKER_HOST dslim/docker-slim
      - run: docker images
      - run: docker volume ls
      - run:
          name: Build Fat image
          command: |
            docker build -t $IMAGE_NAME:latest .
      - run: docker images
      - run:
          name: Slim Image
          command: |
            docker create -v /dcert_path --name dcert alpine:latest /bin/true
            echo $DOCKER_CERT_PATH
            ls -lh $DOCKER_CERT_PATH
            ls -lh $DOCKER_CERT_PATH/ca.pem
            cat $DOCKER_CERT_PATH/ca.pem
            docker cp $DOCKER_CERT_PATH/ca.pem dcert:/dcert_path
            docker cp $DOCKER_CERT_PATH/cert.pem dcert:/dcert_path
            docker cp $DOCKER_CERT_PATH/key.pem dcert:/dcert_path
            docker run -it --rm --volumes-from dcert alpine pwd
            docker run -it --rm --volumes-from dcert alpine ls
            docker run --volumes-from dcert alpine cat /dcert_path/ca.pem
            docker run --volumes-from dcert -e DOCKER_HOST=$DOCKER_HOST -e DOCKER_TLS_VERIFY=$DOCKER_TLS_VERIFY -e DOCKER_CERT_PATH=/dcert_path dslim/docker-slim --debug build --http-probe=false $IMAGE_NAME
            #docker run --volumes-from dcert alpine pwd && ls /
            #docker run --volumes-from dcert -e DOCKER_HOST=$DOCKER_HOST -e DOCKER_TLS_VERIFY=$DOCKER_TLS_VERIFY -e DOCKER_CERT_PATH=/dcert_path dslim/docker-slim --debug build --http-probe=false $IMAGE_NAME
            #docker run dslim/docker-slim --host=$DOCKER_HOST --tls --tls-verify=false --debug build --http-probe=false $IMAGE_NAME
      - run: docker images
      - run: docker volume ls

